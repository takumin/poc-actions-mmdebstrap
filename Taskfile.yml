---
# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: '3'

vars:
  MATRIX:
  - {target: 'debian:bookworm:server:amd64', runner: 'ubuntu-24.04'}
  - {target: 'debian:bookworm:server:arm64', runner: 'ubuntu-24.04-arm'}
  - {target: 'ubuntu:noble:server:amd64', runner: 'ubuntu-24.04'}
  - {target: 'ubuntu:noble:server:arm64', runner: 'ubuntu-24.04-arm',}

tasks:
  default:
    silent: true
    desc: default target
    cmds:
    - task: format
    - task: lint
    - task matrix | jq

  matrix:
    silent: true
    desc: show target matrix
    cmds:
    - echo '{{toJson .MATRIX}}'

  format:
    desc: format files
    cmds:
    - yamlfmt .
    - pinact run

  lint:
    desc: lint files
    cmds:
    - actionlint
    - ghalint run
    - ghalint act

  debian:bookworm:server:amd64:
    silent: true
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        TARGET: '{{.TASK}}'
        COMPONENTS: main,contrib,non-free,non-free-firmware
        MIRROR: '{{env "DEBIAN_MIRROR" | default "http://deb.debian.org/debian"}}'

  debian:bookworm:server:arm64:
    silent: true
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        TARGET: '{{.TASK}}'
        COMPONENTS: main,contrib,non-free,non-free-firmware
        MIRROR: '{{env "DEBIAN_MIRROR" | default "http://deb.debian.org/debian"}}'

  ubuntu:noble:server:amd64:
    silent: true
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        TARGET: '{{.TASK}}'
        COMPONENTS: main,restricted,universe,multiverse
        MIRROR: '{{env "UBUNTU_MIRROR" | default "http://archive.ubuntu.com/ubuntu"}}'

  ubuntu:noble:server:arm64:
    silent: true
    desc: '{{.TASK}}'
    cmds:
    - task: build
      vars:
        TARGET: '{{.TASK}}'
        COMPONENTS: main,restricted,universe,multiverse
        MIRROR: '{{env "UBUNTU_PORTS_MIRROR" | default "http://ports.ubuntu.com/ubuntu-ports"}}'

  build:
    internal: true
    vars:
      PLATFORM: '{{with $a := split ":" .TARGET}}{{env "PLATFORM" | default $a._0}}{{end}}'
      SUITE: '{{with $a := split ":" .TARGET}}{{env "SUITE" | default $a._1}}{{end}}'
      PROFILE: '{{with $a := split ":" .TARGET}}{{env "PROFILE" | default $a._2}}{{end}}'
      ARCHITECTURE: '{{with $a := split ":" .TARGET}}{{env "ARCHITECTURE" | default $a._3}}{{end}}'
      COMPONENTS: '{{env "COMPONENTS" | default .COMPONENTS}}'
      MIRROR: '{{env "MIRROR" | default .MIRROR}}'
    preconditions:
    - sh: test -n "{{.PLATFORM}}"
      msg: empty variable for '.PLATFORM'
    - sh: test -n "{{.SUITE}}"
      msg: empty variable for '.SUITE'
    - sh: test -n "{{.PROFILE}}"
      msg: empty variable for '.PROFILE'
    - sh: test -n "{{.ARCHITECTURE}}"
      msg: empty variable for '.ARCHITECTURE'
    - sh: test -n "{{.COMPONENTS}}"
      msg: empty variable for '.COMPONENTS'
    - sh: test -n "{{.MIRROR}}"
      msg: empty variable for '.MIRROR'
    cmds:
    - cmd: >-
        mmdebstrap
        --variant apt
        --components '{{.COMPONENTS}}'
        --dpkgopt 'path-exclude=/usr/share/man/*'
        --dpkgopt 'path-include=/usr/share/man/man[1-9]/*'
        --dpkgopt 'path-exclude=/usr/share/locale/*'
        --dpkgopt 'path-include=/usr/share/locale/locale.alias'
        --dpkgopt 'path-exclude=/usr/share/doc/*'
        --dpkgopt 'path-include=/usr/share/doc/*/copyright'
        --dpkgopt 'path-include=/usr/share/doc/*/changelog.Debian.*'
        --include 'init,systemd-resolved,systemd-timesyncd,systemd-oomd'
        --include 'libnss-myhostname,libnss-resolve,libnss-systemd,libpam-systemd'
        '{{.SUITE}}'
        '{{.PLATFORM}}-{{.SUITE}}-{{.PROFILE}}-{{.ARCHITECTURE}}-rootfs.tar.zst'
        '{{.MIRROR}}'
